import random
import numpy
import sys

Reference = sys.argv[1]

ASCII = {
        0 : "!",
        1 : "\"",
        2 : "#",
        3 : "$",
        4 : "%",
        5 : "&",
        6 : "\'",
        7 : "(",
        8 : ")",
        9 : "*",
        10 : "+",
        11 : ",",
        12 : "-",
        13 : ".",
        14 : "/",
        15 : "0",
        16 : "1",
        17 : "2",
        18 : "3",
        19 : "4",
        20 : "5",
        21 : "6",
        22 : "7",
        23 : "8",
        24 : "9",
        25 : ":",
        26 : ";",
        27 : "<",
        28 : "=",
        29 : ">",
        30 : "?",
        31 : "@",
        32 : "A",
        33 : "B",
        34 : "C",
        35 : "D",
        36 : "E",
        37 : "F",
        38 : "G",
        39 : "H",
        40 : "I",
        41 : "J",
        42 : "K"
            }
code = {
      "A" : 0,
      "C" : 1,
      "G" : 2,
      "T" : 3
      }
lambdas = [33.61414183, 33.67647777, 33.62527215, 33.70204497, 33.64662733, 37.37200122, 37.31103876, 37.1695086, 37.0173568, 37.12379693, 36.9650524, 37.02409197, 36.98790314, 36.88532913, 36.79913521, 36.67530776, 36.73598535, 36.99973548, 37.05694374, 37.04191678, 36.99264422, 36.93009462, 36.86183742, 36.79993896, 36.62317631, 36.62972835, 36.72270831, 36.65945671, 36.63003357, 36.62755112, 36.69168786, 36.69506562, 36.51887272, 36.77598942, 36.64850951, 36.56309899, 36.49192186, 36.74806186, 36.68290772, 36.59592024, 36.61270729, 36.47335436, 36.52500763, 36.18295859, 36.28925628, 36.44701394, 36.44176417, 36.4553566, 36.40927867, 36.33160037, 36.34981178, 36.37316105, 36.11636993, 36.15736087, 36.04920134, 36.128304, 36.01184251, 36.00820022, 35.88723166, 36.04215078, 36.11398922, 36.11978838, 35.92988096, 35.83603622, 34.9560993, 35.33543595, 35.2942517, 35.31859803, 35.28504426, 35.36661919, 34.81328721, 35.1657137, 34.90256384, 35.01948316, 34.98518669, 34.56267169, 34.69494353, 33.40967545, 33.68200224, 33.62375623, 33.74068573, 33.5806084, 32.97743412, 33.02886357, 33.18083223, 33.19129108, 32.90757961, 32.91127276, 32.43936311, 32.9699359, 32.96521518, 32.49537084, 32.86079967, 32.99317326, 32.37620307, 32.65390172, 32.25373894, 32.02375623, 31.78748601, 31.82270831, 31.52855835, 31.09027368, 31.76470648, 31.50879031, 30.74158104, 31.45946688, 31.49653067, 29.83193611, 31.3394852, 31.75901923, 28.25962967, 29.50113949, 29.84808221, 29.23553769, 29.02249466, 29.40826127, 29.12794791, 28.03286194, 28.61846576, 28.22263709, 28.04252722, 27.78131041, 27.33606674, 28.2042629, 28.06319056, 26.87194018, 27.05994506, 26.27258114, 27.80345915, 28.41367382, 26.19958287, 26.89889104, 27.21165938, 26.0699359, 27.39607285, 25.1689592, 25.13621935, 26.17771899, 26.28351816, 24.95083935, 25.00883101, 26.9501577, 25.84938447, 24.94824499, 26.88316207, 25.59288839, 25.31354156, 26.37051582, 24.98126971, 26.15260962, 25.37581646, 25.26370943, 25.01921864, 24.23440838, 24.95840879, 26.32941296, 25.12396989, 25.21382643, 26.36499135, 24.16713806, 25.83734866, 25.942222, 23.50778309, 23.56340421, 24.69307152, 23.38691627, 23.21534235, 23.90802727, 25.57453454, 23.61596297, 25.56483874, 23.4560586, 23.20737613, 23.37701699, 22.48606165, 22.80806796, 23.7461288, 22.36234612, 22.30405942, 21.89871808, 22.88752671, 23.69568623, 21.5816258, 22.53263811, 23.81548479, 21.57388341, 22.25946688, 22.9223217, 23.35601791, 23.00005087, 23.6672805, 20.90896327, 20.51298199, 21.24896734, 21.64232374, 21.48668227, 22.68110693, 20.57644725, 20.27720012, 20.10677587, 19.65334215, 20.27668125, 21.04985248, 20.20794587, 20.5441347, 19.86091159, 20.45455285, 20.45564147, 19.63972937, 20.12143657, 20.05209075, 19.52225048, 19.60461898, 20.22068369, 19.31542375, 19.72426493, 18.27160444, 18.83032862, 17.66317021, 18.74448062, 18.83817275, 18.23383864, 19.01153729, 18.86318038, 18.47479906, 18.19463832, 17.89012107, 18.40017296, 17.1319768, 18.34677994, 18.15506155, 18.35603825, 18.13394038, 19.23292298, 18.16027063, 18.68700783, 19.0555499, 19.87183844, 19.6717367, 19.81310408, 18.73456099, 19.30950249, 19.13853902, 18.72421406, 18.65233493, 17.79303083, 18.12165022, 17.92117204, 17.64494862, 18.63777597, 18.46243768, 17.27574524, 17.60847492, 16.48882898, 16.35061553, 16.96218334, 16.50970597, 15.392807, 16.43818293, 16.73160037, 14.5109472, 16.52903652, 14.6973039, 15.25491912, 16.01098789, 15.71449791, 15.96975277, 14.64146912, 14.05401363, 15.54212026, 15.5700173, 13.92121274, 15.32976905, 13.18485095, 13.17500254, 14.73371655, 12.8732221, 14.51548479, 14.55933462, 13.7630176, 15.01580018, 13.16134907, 15.15619086, 12.94013633, 13.41772306, 14.85108353, 14.7111405, 14.00160749, 14.01449791, 12.29341744]
nucBlossum = [[.1965, .607,.1965], [.134, .134, .732], [.76, .12, .12], [.177, .646, .177]]
#Convert PHRED integers to probabilities
def inttoProb(p):
    pr = pow(10, -(p/10))
    return pr

bases = ["A", "C", "G", "T"]

    
def genRead(Ref):
    Read = []
    Quality = []
    for n in range(min(len(Ref), 290)):
        err = min(numpy.random.poisson(lambdas[n]), 42)
        Quality.append(ASCII[err])
        pr = inttoProb(err)
        r = random.random()
        if(r < pr):
            s = random.random()
            errlist = nucBlossum[code[Ref[n]]]
            if(s < errlist[0]):
                choice = 0
            elif(s < errlist[0] + errlist[1]):
                choice = 1
            else:
                choice = 2
            temp = bases
            temp.remove(Ref[n])
            base = temp[choice]
        else:
            base = Ref[n]
        Read.append(base)
    Read = ''.join(Read)
    Quality = ''.join(Quality)    
    fastq = [Read, Quality]
    return fastq


answer = genRead(Reference)
print(answer[0])
print(answer[1])
